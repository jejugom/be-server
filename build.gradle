plugins {
    id 'java'
    id 'war'
}

group 'org.scoula'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

// 버전 관리를 위한 ext 블록
ext {
    junitVersion = '5.9.1'
    springVersion = '5.3.37'
    lombokVersion = '1.18.30' // 버전 통일
    aspectjVersion = '1.9.20.1'
    log4j2Version = '2.23.1'   // 안정적인 버전으로 조정
    slf4jVersion = '2.0.13'    // SLF4J API 2.x 버전 명시
    springSecurityVersion = '5.8.13'
}

// 버전 충돌을 막기 위한 강제 설정
configurations.all {
    resolutionStrategy {
        force "org.slf4j:slf4j-api:${slf4jVersion}"
        force "org.apache.logging.log4j:log4j-api:${log4j2Version}"
        force "org.apache.logging.log4j:log4j-core:${log4j2Version}"
    }
}

sourceCompatibility = "16"
targetCompatibility = "16"

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    // ===== 로깅 (Log4j2 + SLF4J) =====
    // SLF4J API 버전을 2.x로 명시적으로 추가
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "org.apache.logging.log4j:log4j-api:${log4j2Version}"
    implementation "org.apache.logging.log4j:log4j-core:${log4j2Version}"
    // log4j-slf4j-impl 대신, SLF4J 2.x와 호환되는 log4j-slf4j2-impl 사용
    implementation "org.apache.logging.log4j:log4j-slf4j2-impl:${log4j2Version}"
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16'

    // Swagger - 구버전 SLF4J API를 가져오므로 제외 처리
    implementation('io.springfox:springfox-swagger2:2.9.2') {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
    implementation('io.springfox:springfox-swagger-ui:2.9.2') {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }

    // ... 나머지 의존성들은 그대로 ...

    // Selenium
    implementation 'org.seleniumhq.selenium:selenium-java:4.20.0'
    implementation 'io.github.bonigarcia:webdrivermanager:5.7.0'

    // Codec
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // Nurigo SMS SDK
    implementation 'net.nurigo:sdk:4.3.2'

    // H2
    runtimeOnly 'com.h2database:h2:2.2.224'

    // JWT
    implementation "io.jsonwebtoken:jjwt-api:0.11.5"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.5"
    implementation "io.jsonwebtoken:jjwt-jackson:0.11.5"

    // Spring Security
    implementation "org.springframework.security:spring-security-web:${springSecurityVersion}"
    implementation "org.springframework.security:spring-security-config:${springSecurityVersion}"
    implementation "org.springframework.security:spring-security-core:${springSecurityVersion}"
    implementation "org.springframework.security:spring-security-taglibs:${springSecurityVersion}"

    // DB
    implementation 'com.zaxxer:HikariCP:2.7.4'
    implementation 'com.mysql:mysql-connector-j:8.1.0'

    // MongoDB
    implementation "org.springframework.data:spring-data-mongodb:3.2.5"
    implementation "org.mongodb:mongodb-driver-sync:4.8.2"

    // MyBatis
    implementation "org.springframework:spring-tx:${springVersion}"
    implementation "org.springframework:spring-jdbc:${springVersion}"
    implementation 'org.mybatis:mybatis:3.4.6'
    implementation 'org.mybatis:mybatis-spring:1.3.2'

    // Spring
    implementation("org.springframework:spring-context:${springVersion}") {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    implementation "org.springframework:spring-webmvc:${springVersion}"
    implementation 'javax.inject:javax.inject:1'

    // AspectJ
    implementation "org.aspectj:aspectjrt:${aspectjVersion}"
    implementation "org.aspectj:aspectjweaver:${aspectjVersion}"

    // JSP, Servlet, JSTL
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    compileOnly 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.3'
    implementation 'javax.servlet:jstl:1.2'

    // XML 한글 처리
    implementation 'xerces:xercesImpl:2.12.2'

    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // Jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.4'

    // Commons FileUpload
    implementation 'commons-fileupload:commons-fileupload:1.5'

    // ULID
    implementation 'com.github.f4b6a3:ulid-creator:5.2.0'

    // jsoup
    implementation 'org.jsoup:jsoup:1.16.1'

    // OpenAI API
    implementation "com.openai:openai-java:3.0.1"

    // ffmpeg
    implementation 'net.bramp.ffmpeg:ffmpeg:0.7.0'

    // Apache Commons CSV
    implementation 'org.apache.commons:commons-csv:1.10.0'

    // 테스트
    testImplementation "org.springframework:spring-test:${springVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

test {
    useJUnitPlatform()
    systemProperty 'file.encoding', 'UTF-8'
}