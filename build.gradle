plugins {
    id 'java'
    id 'war'
}

group 'org.scoula'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.1'
    springVersion = '5.3.37'
    lombokVersion = '1.18.30'
    aspectjVersion = '1.9.20.1'    // AspectJ 최신 마이너 버전
    log4j2Version = '2.24.1'       // Log4j2 최신 안정 버전 (보안 업데이트 포함)
    springSecurityVersion = '5.8.13'
}

sourceCompatibility = "16"
targetCompatibility = "16"

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    //Selenium 의존성 추가
    implementation 'org.seleniumhq.selenium:selenium-java:4.20.0'
    implementation 'io.github.bonigarcia:webdrivermanager:5.7.0'

    implementation 'log4j:log4j:1.2.17'

    //codec
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // Nurigo SMS SDK
    implementation 'net.nurigo:sdk:4.3.2'


    //H2 의존성
    runtimeOnly 'com.h2database:h2:2.2.224' // 버전 명시!!

    // Swagger 관련 의존성
    implementation 'io.springfox:springfox-swagger2:2.9.2'       // Swagger 핵심 라이브러리
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'     // Swagger UI 웹 인터페이스

    //JWT 의존성
    implementation("io.jsonwebtoken:jjwt-api:0.11.5")
    implementation 'org.projectlombok:lombok:1.18.22'
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
    implementation("io.jsonwebtoken:jjwt-jackson:0.11.5")

    // 보안
    implementation("org.springframework.security:spring-security-web:${springSecurityVersion}")
    implementation("org.springframework.security:spring-security-config:${springSecurityVersion}")
    implementation("org.springframework.security:spring-security-core:${springSecurityVersion}")
    implementation("org.springframework.security:spring-security-taglibs:${springSecurityVersion}")


    // ===== 로깅 시스템 (Log4j2) - 최신 버전으로 업데이트 =====
    // Log4j2 API - 로깅 인터페이스 (2.24.1 - 최신 안정 버전, 보안 개선 포함)
    implementation "org.apache.logging.log4j:log4j-api:${log4j2Version}"
    // Log4j2 Core - 로깅 구현체 (성능 및 보안 개선)
    implementation "org.apache.logging.log4j:log4j-core:${log4j2Version}"
    // SLF4J와 Log4j2 연결 - Spring에서 사용하는 SLF4J를 Log4j2로 연결
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:${log4j2Version}"
    // 로깅
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16'

    //데이터베이스
    implementation 'com.zaxxer:HikariCP:2.7.4'
    implementation 'com.mysql:mysql-connector-j:8.1.0'

    //mongoDB
    implementation "org.springframework.data:spring-data-mongodb:3.2.5"
    implementation "org.mongodb:mongodb-driver-sync:4.8.2"

    //MyBatis
    implementation "org.springframework:spring-tx:${springVersion}"
    implementation "org.springframework:spring-jdbc:${springVersion}"
    implementation 'org.mybatis:mybatis:3.4.6'
    implementation 'org.mybatis:mybatis-spring:1.3.2'

    // 스프링
    implementation("org.springframework:spring-context:${springVersion}")
            { exclude group: 'commons-logging', module: 'commons-logging' }
    implementation "org.springframework:spring-webmvc:${springVersion}"
    implementation 'javax.inject:javax.inject:1'

    // AspectJ 런타임 - AOP 기능 실행을 위한 라이브러리 (최신 마이너 버전)
    implementation "org.aspectj:aspectjrt:${aspectjVersion}"
    // AspectJ 위버 - 컴파일/로드 타임에 AOP 적용 (최신 마이너 버전)
    implementation "org.aspectj:aspectjweaver:${aspectjVersion}"

    // JSP, SERVLET, JSTL
    implementation('javax.servlet:javax.servlet-api:4.0.1')

    // compileOnly 'javax.servlet.jsp:jsp-api:2.1'
    compileOnly 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.3'
    implementation 'javax.servlet:jstl:1.2'

    // xml내 한글 처리
    implementation 'xerces:xercesImpl:2.12.2'

    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // Jackson - Json 처리
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.4'

    // Commons FileUpload - MultipartFile 처리
    implementation 'commons-fileupload:commons-fileupload:1.5'

    // 테스트
    testImplementation "org.springframework:spring-test:${springVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // Lombok
    implementation 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    // ULID
    implementation 'com.github.f4b6a3:ulid-creator:5.2.0'

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    // jsoup
    implementation 'org.jsoup:jsoup:1.16.1'

    // OpenAI API 클라이언트 라이브러리
//    implementation 'com.theokanning.openai-gpt3-java:service:0.18.2'
    implementation("com.openai:openai-java:3.0.1")

    // ffmpeg
    implementation 'net.bramp.ffmpeg:ffmpeg:0.7.0'
}

test {
    useJUnitPlatform()
    systemProperty 'file.encoding', 'UTF-8'
}
