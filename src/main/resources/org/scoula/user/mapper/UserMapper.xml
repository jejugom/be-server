<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.scoula.user.mapper.UserMapper">
    <resultMap id="userMap" type="org.scoula.user.domain.UserVo">
        <id property="email" column="email"/>
        <result property="userName" column="user_name"/>
        <result property="userPhone" column="user_phone"/>
        <result property="birth" column="birth"/>
        <result property="point" column="point"/>
        <result property="connectedId" column="connected_id"/>
        <result property="branchId" column="branch_id"/>
        <result property="asset" column="asset"/>
        <result property="filename1" column="filename1"/>
        <result property="filename2" column="filename2"/>
        <result property="tendency" column="tendency"/>
        <result property="assetProportion" column="asset_proportion"/>
    </resultMap>
    <!--
     [수정 핵심] 동적 INSERT 구문:
     - UserVo 객체에서 값이 null이 아닌 필드만 INSERT 쿼리에 동적으로 포함시킵니다.
     - 이렇게 하면 user_phone, birth 등이 null일 때 쿼리에서 제외되어,
      DB 테이블에 설정된 DEFAULT 값이 자동으로 적용됩니다.
    -->
    <insert id="save" parameterType="org.scoula.user.domain.UserVo">
            INSERT INTO user
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="email != null">email,</if>
                <if test="userName != null">user_name,</if>
                <if test="userPhone != null">user_phone,</if>
                <if test="birth != null">birth,</if>
                <if test="point != null">point,</if>
                <if test="connectedId != null">connected_id,</if>
                <if test="branchId != null">branch_id,</if>
                <if test="asset != null">asset,</if>
                <if test="filename1 != null">filename1,</if>
                <if test="filename2 != null">filename2,</if>
                <if test="tendency != null">tendency,</if>
                <if test="assetProportion != null">asset_proportion,</if>
            </trim>
            <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
                <if test="email != null">#{email},</if>
                <if test="userName != null">#{userName},</if>
                <if test=" userPhone != null">#{userPhone},</if>
            </trim>
                <if test="birth != null">#{birth},</if>
                <if test="point != null">#{point},</if>
                <if test="connectedId != null">#{connectedId},</if>
                <if test="branchId != null">#{branchId},</if>
                <if test="asset != null">#{asset},</if>
                <if test="filename1 != null">#{filename1},</if>
                <if test="filename2 != null">#{filename2},</if>
                <if test="tendency != null">#{tendency},</if>
                <if test="assetProportion != null">#{assetProportion},</if>
    </insert>
    <select id="findByEmail" resultMap="userMap">
        SELECT email,
               user_name,
               user_phone,
               birth,
               point,
               connected_id,
               branch_id,
               asset,
               filename1,
               filename2,
               tendency,
               asset_proportion
        FROM user
        WHERE email = #{email}
    </select>
        <!--
         [수정 권장] 동적 UPDATE 구문:
         - save와 마찬가지로, 값이 변경된 필드만 UPDATE 하도록 동적 쿼리를 사용하는 것이 효율적입니다.
        -->
    <update id="update" parameterType="org.scoula.user.domain.UserVo">
        UPDATE user
        <set>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="userPhone != null">user_phone = #{userPhone},</if>
            <if test="birth != null">birth = #{birth},</if>
            <if test="point != null">point = #{point},</if>
            <if test="connectedId != null">connected_id = #{connectedId},</if>
            <if test="branchId != null">branch_id = #{branchId},</if>
            <if test="asset != null">asset = #{asset},</if>
            <if test="filename1 != null">filename1 = #{filename1},</if>
            <if test="filename2 != null">filename2 = #{filename2},</if>
            <if test="tendency != null">tendency = #{tendency},</if>
            <if test="assetProportion != null">asset_proportion = #{assetProportion},</if>
        </set>
        WHERE email = #{email}
    </update>
    <delete id="deleteByEmail" parameterType="string">
        DELETE
        FROM user
        WHERE email = #{email}
    </delete>
    <select id="findAll" resultMap="userMap">
        SELECT email,
               user_name,
               user_phone,
               birth,
               point,
               connected_id,
               branch_id,
               asset,
               filename1,
               filename2,
               tendency,
               asset_proportion
        FROM user
    </select>
    <update id="updateConnectedId">
        UPDATE user
        SET connected_id = #{connectedId}
        WHERE email = #{email}
    </update>
    <update id="updateBranchId">
        UPDATE user
        SET branch_id = #{branchId}
        WHERE email = #{email}
    </update>
    <select id="countAllUsersWithAsset" resultType="long">
        SELECT count(*)
        FROM user
        WHERE asset IS NOT NULL
    </select>
    <select id="countUsersWithMoreAsset" parameterType="long" resultType="long">
        SELECT count(*)
        FROM user
        WHERE asset > #{asset}
    </select>
</mapper>
