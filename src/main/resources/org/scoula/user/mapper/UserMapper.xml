<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.scoula.user.mapper.UserMapper">
    <resultMap id="userMap" type="org.scoula.user.domain.UserVo">
        <id property="email" column="email"/>
        <result property="userName" column="user_name"/>
        <result property="userPhone" column="user_phone"/>
        <result property="birth" column="birth"/>
        <result property="connectedId" column="connected_id"/>
        <result property="branchId" column="branch_id"/>
        <result property="asset" column="asset"/>
        <result property="filename1" column="filename1"/>
        <result property="filename2" column="filename2"/>
        <result property="tendency" column="tendency"/>
        <result property="assetProportion" column="asset_proportion"/>
    </resultMap>

    <select id="findByEmail" resultMap="userMap">
        SELECT email,
               user_name,
               user_phone,
               birth,
               connected_id,
               branch_id,
               asset,
               filename1,
               filename2,
               tendency,
               asset_proportion
        FROM user
        WHERE email = #{email}
    </select>

    <insert id="save" parameterType="org.scoula.user.domain.UserVo">
        INSERT INTO user (email, user_name, user_phone, birth, connected_id, branch_id, asset, filename1,
                          filename2, tendency, asset_proportion)
        VALUES (#{email}, #{userName}, #{userPhone}, #{birth}, #{connectedId}, #{branchId}, #{asset},
                #{filename1}, #{filename2}, #{tendency}, #{assetProportion})
    </insert>

    <update id="update" parameterType="org.scoula.user.domain.UserVo">
        UPDATE user
        SET user_name        = #{userName},
            user_phone       = #{userPhone},
            birth            = #{birth},
            connected_id     = #{connectedId},
            branch_id        = #{branchId},
            asset            = #{asset},
            filename1        = #{filename1},
            filename2        = #{filename2},
            tendency         = #{tendency},
            asset_proportion = #{assetProportion}
        WHERE email = #{email}
    </update>

    <delete id="deleteByEmail" parameterType="string">
        DELETE
        FROM user
        WHERE email = #{email}
    </delete>

    <select id="findAll" resultMap="userMap">
        SELECT email,
               user_name,
               user_phone,
               birth,
               connected_id,
               branch_id,
               asset,
               filename1,
               filename2,
               tendency,
               asset_proportion
        FROM user
    </select>

    <update id="updateConnectedId">
        UPDATE user
        SET connected_id = #{connectedId}
        WHERE email = #{email}
    </update>

    <update id="updateBranchId">
        UPDATE user
        SET branch_id = #{branchId}
        WHERE email = #{email}
    </update>

    <select id="countAllUsersWithAsset" resultType="long">
        SELECT count(*)
        FROM user
        WHERE asset IS NOT NULL
    </select>

    <select id="countUsersWithMoreAsset" parameterType="long" resultType="long">
        SELECT count(*)
        FROM user
        WHERE asset > #{asset}
    </select>
</mapper>
