<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.scoula.booking.mapper.BookingMapper">
    <resultMap id="bookingMap" type="org.scoula.booking.domain.BookingVo">
        <result property="bookingId" column="booking_id"/>
        <result property="branchId" column="branch_id"/>
        <result property="email" column="email"/>
        <result property="finPrdtCode" column="fin_prdt_cd"/>
        <result property="date" column="date"/>
        <result property="time" column="time"/>
        <result property="docInfo" column="doc_info" typeHandler="org.scoula.booking.config.JsonTypeHandler"/>
    </resultMap>

    <!-- 2. ID로 예약을 조회하는 select 쿼리 추가 -->
    <select id="findById" resultMap="bookingMap">
        SELECT *
        FROM booking
        WHERE booking_id = #{bookingId}
    </select>

    <select id="getBookingsByEmail" resultMap="bookingMap">
        SELECT booking_id,
               email,
               fin_prdt_code, date, time, doc_info, branch_name
        FROM
            booking
        WHERE
            email = #{email}
    </select>

    <select id="getBookingById" resultMap="bookingMap">
        SELECT *
        FROM booking
        WHERE booking_id = #{bookingId}
    </select>

    <insert id="insertBooking">
        INSERT INTO booking (booking_id, branch_id, email, fin_prdt_cd, date, time, doc_info)
        VALUES (#{bookingId}, #{branchId}, #{email}, #{finPrdtCode}, #{date}, #{time}, #{docInfo})
    </insert>

    <update id="updateBooking">
        UPDATE booking
        SET email          = #{email},
            fint_prdt_code = #{finPrdtCoderdtCode},
            date           = #{date},
            time           = #{time},
            doc_info       = #{docInfo},
            branch_name    = #{branchName}
        WHERE booking_id = #{bookingId}
    </update>

    <delete id="deleteBooking">
        DELETE
        FROM booking
        WHERE booking_id = #{bookingId}
    </delete>

    <select id="countByBranchDateTime" resultType="int">
        SELECT COUNT(*)
        FROM booking
        WHERE branch_id = #{branchId}
          AND date = #{date}
          AND time = #{time}
    </select>

    <select id="findFutureByBranch" resultMap="bookingMap">
        SELECT *
        FROM booking
        WHERE branch_id = #{branchId}
          AND (
            date > #{currentDate}
            OR
            (date = #{currentDate} AND time >= #{currentTime})
            )
        ORDER BY date, time
    </select>

    <select id="findByEmailAndFinPrdtCode" resultMap="bookingMap">
        SELECT *
        FROM booking
        WHERE email = #{email}
          AND fin_prdt_cd = #{finPrdtCode}
        ORDER BY date DESC, time DESC
            LIMIT 1
    </select>
</mapper>
